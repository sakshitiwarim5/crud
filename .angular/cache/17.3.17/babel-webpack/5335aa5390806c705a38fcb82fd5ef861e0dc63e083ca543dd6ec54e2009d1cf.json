{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CompanyService {\n  constructor() {\n    this.companies = [{\n      id: \"1\",\n      companyName: \"TechCorp Solutions\",\n      email: \"info@techcorp.com\",\n      phoneNumber: \"123-456-7890\",\n      createdAt: new Date()\n    }, {\n      id: \"2\",\n      companyName: \"InnovateX Labs\",\n      email: \"contact@innovatex.com\",\n      phoneNumber: \"987-654-3210\",\n      createdAt: new Date()\n    }, {\n      id: \"3\",\n      companyName: \"Creative Minds Inc.\",\n      email: \"hello@creativeminds.com\",\n      phoneNumber: \"555-666-7777\",\n      createdAt: new Date()\n    }];\n  }\n  list() {\n    return this.companies;\n  }\n  delete(id) {\n    this.companies = this.companies.filter(c => c.id !== id);\n  }\n  static {\n    this.ɵfac = function CompanyService_Factory(t) {\n      return new (t || CompanyService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CompanyService,\n      factory: CompanyService.ɵfac,\n      providedIn: \"root\"\n    });\n  }\n}","map":{"version":3,"names":["CompanyService","constructor","companies","id","companyName","email","phoneNumber","createdAt","Date","list","delete","filter","c","factory","ɵfac","providedIn"],"sources":["C:\\Users\\asus\\OneDrive\\Desktop\\easy\\src\\app\\company.service.ts"],"sourcesContent":["// import { Injectable } from \"@angular/core\";\r\n// import { Company } from \"./models\";\r\n\r\n// const STORAGE_KEY = \"companies_v1\";\r\n\r\n// @Injectable({ providedIn: \"root\" })\r\n// export class CompanyService {\r\n//   private companies: Company[] = [];\r\n\r\n//   constructor() {\r\n//     const raw = localStorage.getItem(STORAGE_KEY);\r\n//     this.companies = raw ? JSON.parse(raw) : [];\r\n//   }\r\n\r\n//   private persist() {\r\n//     localStorage.setItem(STORAGE_KEY, JSON.stringify(this.companies));\r\n//   }\r\n\r\n//   list(): Company[] {\r\n//     return [...this.companies].sort((a, b) =>\r\n//       b.createdAt.localeCompare(a.createdAt)\r\n//     );\r\n//   }\r\n\r\n//   get(id: string): Company | undefined {\r\n//     return this.companies.find((c) => c.id === id);\r\n//   }\r\n\r\n//   create(company: Company) {\r\n//     this.companies.push(company);\r\n//     this.persist();\r\n//   }\r\n\r\n//   update(id: string, patch: Partial<Company>) {\r\n//     const idx = this.companies.findIndex((c) => c.id === id);\r\n//     if (idx >= 0) {\r\n//       this.companies[idx] = { ...this.companies[idx], ...patch };\r\n//       this.persist();\r\n//     }\r\n//   }\r\n\r\n//   delete(id: string) {\r\n//     this.companies = this.companies.filter((c) => c.id !== id);\r\n//     this.persist();\r\n//   }\r\n// }\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Company } from \"./models\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class CompanyService {\r\n  private companies: Company[] = [\r\n    {\r\n      id: \"1\",\r\n      companyName: \"TechCorp Solutions\",\r\n      email: \"info@techcorp.com\",\r\n      phoneNumber: \"123-456-7890\",\r\n      createdAt: new Date(),\r\n    },\r\n    {\r\n      id: \"2\",\r\n      companyName: \"InnovateX Labs\",\r\n      email: \"contact@innovatex.com\",\r\n      phoneNumber: \"987-654-3210\",\r\n      createdAt: new Date(),\r\n    },\r\n    {\r\n      id: \"3\",\r\n      companyName: \"Creative Minds Inc.\",\r\n      email: \"hello@creativeminds.com\",\r\n      phoneNumber: \"555-666-7777\",\r\n      createdAt: new Date(),\r\n    },\r\n  ];\r\n\r\n  constructor() {}\r\n\r\n  list(): Company[] {\r\n    return this.companies;\r\n  }\r\n\r\n  delete(id: string) {\r\n    this.companies = this.companies.filter((c) => c.id !== id);\r\n  }\r\n}\r\n"],"mappings":";AAqDA,OAAM,MAAOA,cAAc;EAyBzBC,YAAA;IAxBQ,KAAAC,SAAS,GAAc,CAC7B;MACEC,EAAE,EAAE,GAAG;MACPC,WAAW,EAAE,oBAAoB;MACjCC,KAAK,EAAE,mBAAmB;MAC1BC,WAAW,EAAE,cAAc;MAC3BC,SAAS,EAAE,IAAIC,IAAI;KACpB,EACD;MACEL,EAAE,EAAE,GAAG;MACPC,WAAW,EAAE,gBAAgB;MAC7BC,KAAK,EAAE,uBAAuB;MAC9BC,WAAW,EAAE,cAAc;MAC3BC,SAAS,EAAE,IAAIC,IAAI;KACpB,EACD;MACEL,EAAE,EAAE,GAAG;MACPC,WAAW,EAAE,qBAAqB;MAClCC,KAAK,EAAE,yBAAyB;MAChCC,WAAW,EAAE,cAAc;MAC3BC,SAAS,EAAE,IAAIC,IAAI;KACpB,CACF;EAEc;EAEfC,IAAIA,CAAA;IACF,OAAO,IAAI,CAACP,SAAS;EACvB;EAEAQ,MAAMA,CAACP,EAAU;IACf,IAAI,CAACD,SAAS,GAAG,IAAI,CAACA,SAAS,CAACS,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACT,EAAE,KAAKA,EAAE,CAAC;EAC5D;;;uBAjCWH,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAa,OAAA,EAAdb,cAAc,CAAAc,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}